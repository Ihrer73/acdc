# This Python file uses the following encoding: utf-8
"""autogenerated by genpy from definitions/v2x_CAM_basic_container.msg. Do not edit."""
import codecs
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class v2x_CAM_basic_container(genpy.Message):
  _md5sum = "b7e929886426dcc052caaa0eea30591f"
  _type = "definitions/v2x_CAM_basic_container"
  _has_header = False  # flag to mark the presence of a Header object
  _full_text = """# BasicContainer
    uint8 stationType
    # Reference Position
        float64 referencePosition_latitude
        float64 referencePosition_longitude
        # PosConfidenceEllipse
            uint16 referencePosition_positionConfidenceEllipse_semiMajorConfidence
            uint16 referencePosition_positionConfidenceEllipse_semiMinorConfidence
            uint16 referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue
        # Altitude
            int16 referencePosition_altitude_altitudeValue
            uint8 referencePosition_altitude_altitudeConfidence"""
  __slots__ = ['stationType','referencePosition_latitude','referencePosition_longitude','referencePosition_positionConfidenceEllipse_semiMajorConfidence','referencePosition_positionConfidenceEllipse_semiMinorConfidence','referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue','referencePosition_altitude_altitudeValue','referencePosition_altitude_altitudeConfidence']
  _slot_types = ['uint8','float64','float64','uint16','uint16','uint16','int16','uint8']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       stationType,referencePosition_latitude,referencePosition_longitude,referencePosition_positionConfidenceEllipse_semiMajorConfidence,referencePosition_positionConfidenceEllipse_semiMinorConfidence,referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue,referencePosition_altitude_altitudeValue,referencePosition_altitude_altitudeConfidence

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(v2x_CAM_basic_container, self).__init__(*args, **kwds)
      # message fields cannot be None, assign default values for those that are
      if self.stationType is None:
        self.stationType = 0
      if self.referencePosition_latitude is None:
        self.referencePosition_latitude = 0.
      if self.referencePosition_longitude is None:
        self.referencePosition_longitude = 0.
      if self.referencePosition_positionConfidenceEllipse_semiMajorConfidence is None:
        self.referencePosition_positionConfidenceEllipse_semiMajorConfidence = 0
      if self.referencePosition_positionConfidenceEllipse_semiMinorConfidence is None:
        self.referencePosition_positionConfidenceEllipse_semiMinorConfidence = 0
      if self.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue is None:
        self.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue = 0
      if self.referencePosition_altitude_altitudeValue is None:
        self.referencePosition_altitude_altitudeValue = 0
      if self.referencePosition_altitude_altitudeConfidence is None:
        self.referencePosition_altitude_altitudeConfidence = 0
    else:
      self.stationType = 0
      self.referencePosition_latitude = 0.
      self.referencePosition_longitude = 0.
      self.referencePosition_positionConfidenceEllipse_semiMajorConfidence = 0
      self.referencePosition_positionConfidenceEllipse_semiMinorConfidence = 0
      self.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue = 0
      self.referencePosition_altitude_altitudeValue = 0
      self.referencePosition_altitude_altitudeConfidence = 0

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_get_struct_B2d3HhB().pack(_x.stationType, _x.referencePosition_latitude, _x.referencePosition_longitude, _x.referencePosition_positionConfidenceEllipse_semiMajorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMinorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue, _x.referencePosition_altitude_altitudeValue, _x.referencePosition_altitude_altitudeConfidence))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 26
      (_x.stationType, _x.referencePosition_latitude, _x.referencePosition_longitude, _x.referencePosition_positionConfidenceEllipse_semiMajorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMinorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue, _x.referencePosition_altitude_altitudeValue, _x.referencePosition_altitude_altitudeConfidence,) = _get_struct_B2d3HhB().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_get_struct_B2d3HhB().pack(_x.stationType, _x.referencePosition_latitude, _x.referencePosition_longitude, _x.referencePosition_positionConfidenceEllipse_semiMajorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMinorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue, _x.referencePosition_altitude_altitudeValue, _x.referencePosition_altitude_altitudeConfidence))
    except struct.error as se: self._check_types(struct.error("%s: '%s' when writing '%s'" % (type(se), str(se), str(locals().get('_x', self)))))
    except TypeError as te: self._check_types(ValueError("%s: '%s' when writing '%s'" % (type(te), str(te), str(locals().get('_x', self)))))

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    if python3:
      codecs.lookup_error("rosmsg").msg_type = self._type
    try:
      end = 0
      _x = self
      start = end
      end += 26
      (_x.stationType, _x.referencePosition_latitude, _x.referencePosition_longitude, _x.referencePosition_positionConfidenceEllipse_semiMajorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMinorConfidence, _x.referencePosition_positionConfidenceEllipse_semiMajorOrientationheadingValue, _x.referencePosition_altitude_altitudeValue, _x.referencePosition_altitude_altitudeConfidence,) = _get_struct_B2d3HhB().unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e)  # most likely buffer underfill

_struct_I = genpy.struct_I
def _get_struct_I():
    global _struct_I
    return _struct_I
_struct_B2d3HhB = None
def _get_struct_B2d3HhB():
    global _struct_B2d3HhB
    if _struct_B2d3HhB is None:
        _struct_B2d3HhB = struct.Struct("<B2d3HhB")
    return _struct_B2d3HhB
